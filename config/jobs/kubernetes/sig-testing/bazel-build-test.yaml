presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-bazel-build
    always_run: true
    skip_branches:
    - release-1.10 # different bazel version
    - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      skip_branches:
      - release-1.10 # different bazel version
      - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180829-29d5569b7
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--repo=k8s.io/kubernetes-anywhere=kubeadm-e2e"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=75"
          - --scenario=kubernetes_e2e
          - --
          - --cluster=
          - --deployment=kubernetes-anywhere
          - --gcp-zone=us-central1-f
          - --ginkgo-parallel=30
          - --kubeadm=pull
          - --kubernetes-anywhere-kubernetes-version=ci-cross/latest
          - --provider=kubernetes-anywhere
          - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\] --minStartupPods=8
          - --timeout=55m
          - --use-shared-build=bazel
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: "true"
  - name: pull-kubernetes-bazel-build
    always_run: true
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      branches:
      - release-1.10
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180829-29d5569b7
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--repo=k8s.io/kubernetes-anywhere=kubeadm-e2e"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=75"
          - --scenario=kubernetes_e2e
          - --
          - --cluster=
          - --deployment=kubernetes-anywhere
          - --gcp-zone=us-central1-f
          - --ginkgo-parallel=30
          - --kubeadm=pull
          - --kubernetes-anywhere-kubernetes-version=ci-cross/latest
          - --provider=kubernetes-anywhere
          - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\] --minStartupPods=8
          - --timeout=55m
          - --use-shared-build=bazel
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: "true"
  - name: pull-kubernetes-bazel-build
    always_run: true
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      branches:
      - release-1.9
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180829-29d5569b7
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--repo=k8s.io/kubernetes-anywhere=kubeadm-e2e"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=75"
          - --scenario=kubernetes_e2e
          - --
          - --cluster=
          - --deployment=kubernetes-anywhere
          - --gcp-zone=us-central1-f
          - --ginkgo-parallel=30
          - --kubeadm=pull
          - --kubernetes-anywhere-kubernetes-version=ci-cross/latest
          - --provider=kubernetes-anywhere
          - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\] --minStartupPods=8
          - --timeout=55m
          - --use-shared-build=bazel
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: "true"
  
  - name: pull-kubernetes-bazel-test
    always_run: true
    skip_branches:
    - release-1.10 # different bazel version
    - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-bazel-test
    always_run: true
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-bazel-test
    always_run: true
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

postsubmits:
  kubernetes/kubernetes:
  - name: ci-kubernetes-bazel-build
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: ci-kubernetes-bazel-test
      labels:
        preset-service-account: "true"
        preset-bazel-scratch-dir: "true"
        preset-bazel-remote-cache-enabled: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
          args:
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          - "--timeout=60"
          - "--scenario=kubernetes_bazel"
          - "--" # end bootstrap args, scenario args below
          - "--test=//... -//build/... -//vendor/..."
          - "--manual-test=//hack:verify-all"
          - "--test-args=--config=unit"
          - "--test-args=--build_tag_filters=-e2e,-integration"
          - "--test-args=--test_tag_filters=-e2e,-integration"
          - "--test-args=--flaky_test_attempts=3"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "6Gi"

  # manual-release-bump-required (add a job for the new release branch and delete the one for the deprecated release.)
  - name: ci-kubernetes-bazel-build-1-9
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.9.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-build-1-10
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.10.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-build-1-11
    branches:
    - release-1.11
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.11
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.11.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-build-1-12
    branches:
    - release-1.12
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.12
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.12.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  # manual-release-bump-required (add a job for the new release branch and delete the one for the deprecated release.)
  - name: ci-kubernetes-bazel-test-1-9
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-test-1-10
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-test-1-11
    branches:
    - release-1.11
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.11
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-test-1-12
    branches:
    - release-1.12
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.12
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

periodics:
# periodic bazel build jobs
- name: periodic-kubernetes-bazel-build-master
  interval: 5m
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      - "--gcs=gs://kubernetes-release-dev/ci"
      - "--version-suffix=-bazel"
      - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel.txt"
      env:
      # so we can use the right cache id
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

# manual-release-bump-required (add a job for the new release branch and delete the one for the deprecated release.)
- name: periodic-kubernetes-bazel-build-1-9
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-build-1-10
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.10
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-build-1-11
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.11
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-build-1-12
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.12
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.12"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      # so we can use the right cache id
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"


# periodic bazel test jobs
- interval: 5m
  name: periodic-kubernetes-bazel-test-master
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
      args:
      - --repo=k8s.io/kubernetes
      - --root=/go/src
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

# manual-release-bump-required (add a job for the new release branch and delete the one for the deprecated release.)
- name: periodic-kubernetes-bazel-test-1-9
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-test-1-10
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.10
      args:
      - --root=/go/src
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-test-1-11
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.11
      args:
      - --root=/go/src
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-test-1-12
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-1.12
      args:
      - "--repo=k8s.io/kubernetes=release-1.12"
      - --root=/go/src
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--scenario=kubernetes_bazel"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
